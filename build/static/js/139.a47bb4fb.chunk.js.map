{"version":3,"file":"static/js/139.a47bb4fb.chunk.js","mappings":"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","sources":["components/icons/link-icon.tsx","components/normal/linear-indeterminated/index.tsx","components/reusables/page-breadcrumb/desktop.tsx","components/reusables/page-breadcrumb/page-breadcrumb.tsx","components/reusables/title-value-viewer/index.tsx","consistants/index.ts","containers/page-wrapper/index.tsx","components/reusables/icon-button-with-popover/index.tsx","components/icons/calender-icon.tsx","containers/page-wrapper/partials/heading.tsx","components/icons/copy-icon.tsx","components/icons/grid-icon.tsx","pages/claims/details/index.tsx"],"sourcesContent":["import * as React from \"react\"\n\nexport interface IconType {\n  color?: string\n}\n\ninterface ILinkIconProps extends IconType {\n  width?: string\n  height?: string\n}\n\nconst LinkIcon: React.FunctionComponent<ILinkIconProps> = ({\n  color = \"#D4D4D4\",\n  width = 24,\n  height = 24\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M14.9902 17.5H16.5002C19.5202 17.5 22.0002 15.03 22.0002 12C22.0002 8.98 19.5302 6.5 16.5002 6.5H14.9902\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M9 6.5H7.5C4.47 6.5 2 8.97 2 12C2 15.02 4.47 17.5 7.5 17.5H9\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M8 12H16\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default LinkIcon\n","import * as React from \"react\";\n\nimport { CircularProgress, Stack, Typography } from \"@mui/material\";\n\nimport { useTranslation } from \"react-i18next\";\n\ninterface ILinearIndeterminateProps {\n  hasTitle?: boolean;\n}\n\nconst LinearIndeterminate: React.FC<ILinearIndeterminateProps> = ({\n  hasTitle = false,\n}) => {\n  const { t } = useTranslation([\"common\"]);\n\n  return (\n    <Stack\n      sx={{ width: \"100%\" }}\n      direction=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      spacing={2}\n    >\n      {hasTitle && (\n        <Typography component=\"p\" sx={{ fontSize: 20 }} color=\"primary\">\n          {t(\"common:is_loading\")}\n        </Typography>\n      )}\n      <CircularProgress />\n    </Stack>\n  );\n};\nexport default LinearIndeterminate;\n","import { Box, Link, Stack, Typography, alpha, styled } from \"@mui/material\";\nimport PageBreadcrumbSearchHeader from \"./search\";\nimport React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { absolutePath } from \"@/navigation/absoluteRoutes\";\n\nconst Desktop = ({\n  items,\n  pathId,\n}: {\n  items: absolutePath[];\n  pathId: number;\n}) => {\n  const lastIndex = items.length - 1;\n\n  return (\n    <Stack direction=\"row\" alignItems=\"center\" sx={{ py: 2 }}>\n      <Stack direction=\"column\">\n        <Stack direction=\"row\" alignItems=\"center\">\n          {items.map(({ path, title }, index) => {\n            const lastOne = index === lastIndex;\n\n            return (\n              <React.Fragment key={index}>\n                <RouterLink\n                  to={\n                    items.length !== 1 && lastOne ? `${path}/${pathId}` : path\n                  }\n                >\n                  <Link\n                    variant={`small${index === lastIndex ? \"Medium\" : \"Light\"}`}\n                    color=\"typographyGray.main\"\n                    underline=\"none\"\n                    marginRight={1}\n                  >\n                    <Typography\n                      component=\"span\"\n                      sx={{\n                        textTransform: \"capitalize\",\n                        color: (t) =>\n                          lastOne\n                            ? t.palette.text.secondary\n                            : t.palette.primary.main,\n\n                        bgcolor: \"transparent\",\n                        borderRadius: 2,\n                        py: 0.2,\n                        px: 1,\n                      }}\n                    >\n                      {title}\n                    </Typography>\n                  </Link>\n                </RouterLink>\n                {!lastOne && (\n                  <Box\n                    marginRight={1}\n                    sx={{\n                      position: \"relative\",\n                      display: \"flex\",\n                      top: 1,\n                    }}\n                  >\n                    <Typography variant={\"bodyMedium\"} color=\"text.secondary\">\n                      /\n                    </Typography>\n                  </Box>\n                )}\n              </React.Fragment>\n            );\n          })}\n        </Stack>\n      </Stack>\n    </Stack>\n  );\n};\n\nexport default Desktop;\n","import Desktop from \"./desktop\"\n// import Mobile from \"./mobile\";\nimport { getPaths } from \"@/utils\"\nimport { useLocation } from \"react-router-dom\"\nimport { useTheme } from \"@mui/material\"\nimport { useTranslation } from \"react-i18next\"\n\ninterface IPageBreadCrumbsProps {\n  pathId?: number\n}\n\nconst PageBreadcrumb: React.FunctionComponent<IPageBreadCrumbsProps> = ({\n  pathId\n}): React.ReactElement => {\n  const theme = useTheme()\n  // const isDesktop = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const { t } = useTranslation()\n  const location = useLocation()\n  const paths = getPaths(location.pathname, t)\n\n  // const currentTitle = (paths.length && paths[paths.length - 1].title) || \"\";\n\n  return <Desktop items={paths} pathId={pathId} />\n\n  // return isDesktop ? (\n  //   <Desktop items={paths} />\n  // ) : (\n  //   <Mobile\n  //     currentTitle={currentTitle}\n  //     previousLink={paths[paths.length - 2]?.path}\n  //   />\n  // );\n}\n\nexport default PageBreadcrumb\n","import * as React from \"react\";\n\nimport { Box, Stack, Typography, alpha, SxProps, Theme } from \"@mui/material\";\n\ninterface ITitleValueViewerProps {\n  title: string;\n  value: React.ReactNode;\n  sx?: SxProps<Theme>;\n  icon?: React.ReactNode;\n  direction?: \"row\" | \"row-reverse\" | \"column\" | \"column-reverse\";\n}\n\nconst TitleValueViewer: React.FunctionComponent<ITitleValueViewerProps> = ({\n  title,\n  value,\n  sx,\n  icon,\n  direction = \"row\",\n}) => {\n  return (\n    <Stack\n      direction={direction}\n      spacing={1}\n      justifyContent=\"space-between\"\n      sx={{\n        p: 0.5,\n        width: \"100%\",\n        textTransform: \"capitalize\",\n        ...sx,\n      }}\n    >\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n        {icon && icon}\n        {title && (\n          <Typography color={\"text.secondary\"} variant={\"smallMedium\"}>\n            {title}\n          </Typography>\n        )}\n      </Stack>\n      <Box>{value}</Box>\n    </Stack>\n  );\n};\n\nexport default TitleValueViewer;\n","export const ASSETS_PATH = \"/static\"\nexport const LISTING_PER_PAGE = 10\n","import * as React from \"react\"\n\nimport { Box, Breakpoint, Container, SxProps, Theme } from \"@mui/material\"\n\nimport LinearIndeterminate from \"@/components/normal/linear-indeterminated\"\nimport PageHeading from \"./partials/heading\"\n\ninterface IPageWrapperProps {\n  metaData?: React.ReactElement\n  hasContainer?: boolean\n  container?: Breakpoint\n  sx?: SxProps<Theme>\n  loading?: boolean\n}\n\nconst PageWrapper: React.FunctionComponent<IPageWrapperProps> = (props) => {\n  const {\n    metaData,\n    children,\n    hasContainer = true,\n    container = \"xl\",\n    sx,\n    loading = false\n  } = props\n\n  const renderChildren = !loading ? (\n    children\n  ) : (\n    <LinearIndeterminate hasTitle={true} />\n  )\n\n  return (\n    <Box>\n      <PageHeading metaData={metaData} container={container} />\n      {/** Content */}\n      <Box sx={sx}>\n        {hasContainer ? (\n          <Container maxWidth=\"xl\">{renderChildren}</Container>\n        ) : (\n          renderChildren\n        )}\n      </Box>\n      {/** Content */}\n    </Box>\n  )\n}\n\nexport default PageWrapper\n","import * as React from \"react\"\n\nimport { Badge, Box, IconButton, Popover, SxProps, Theme } from \"@mui/material\"\n\ninterface IIconButtonWithPopoverProps {\n  label: React.ReactElement\n  loading?: boolean\n  buttonId?: string\n  buttonColor?:\n    | \"inherit\"\n    | \"default\"\n    | \"primary\"\n    | \"secondary\"\n    | \"error\"\n    | \"info\"\n    | \"success\"\n    | \"warning\"\n  width?: number | number[]\n  sx?: SxProps<Theme>\n  hasBadge?: boolean\n}\n\nconst IconButtonWithPopover: React.FunctionComponent<\n  IIconButtonWithPopoverProps\n> = ({\n  label,\n  loading = false,\n  buttonId = \"button-popover\",\n  children,\n  buttonColor = \"inherit\",\n  width = 230,\n  sx = {},\n  hasBadge = false\n}) => {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const open = Boolean(anchorEl)\n  const id = open ? buttonId : undefined\n\n  return (\n    <Box sx={sx}>\n      {hasBadge ? (\n        <Badge\n          variant=\"dot\"\n          invisible={!hasBadge}\n          anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        >\n          <IconButton\n            aria-describedby={id}\n            onClick={handleClick}\n            color={buttonColor}\n          >\n            {label}\n          </IconButton>\n        </Badge>\n      ) : (\n        <IconButton\n          aria-describedby={id}\n          onClick={handleClick}\n          color={buttonColor}\n        >\n          {label}\n        </IconButton>\n      )}\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        }}\n        transformOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\"\n        }}\n        sx={{\n          [`& .MuiPaper-root`]: {\n            px: \"0 !important\"\n          }\n        }}\n      >\n        <Box sx={{ width, maxWidth: \"100%\" }}>{children}</Box>\n      </Popover>\n    </Box>\n  )\n}\n\nexport default IconButtonWithPopover\n","import * as React from \"react\"\n\nexport interface IconType {\n  color?: string\n}\n\ninterface ICalenderIconProps extends IconType {\n  width?: string\n  height?: string\n}\n\nconst CalenderIcon: React.FunctionComponent<ICalenderIconProps> = ({\n  color = \"#8F8DE0\",\n  width = 24,\n  height = 24\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M8 2V5\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-miterlimit=\"10\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M16 2V5\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-miterlimit=\"10\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M3.5 9.08984H20.5\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-miterlimit=\"10\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M21 8.5V17C21 20 19.5 22 16 22H8C4.5 22 3 20 3 17V8.5C3 5.5 4.5 3.5 8 3.5H16C19.5 3.5 21 5.5 21 8.5Z\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-miterlimit=\"10\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M15.6947 13.7002H15.7037\"\n        stroke={color}\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M15.6947 16.7002H15.7037\"\n        stroke={color}\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M11.9955 13.7002H12.0045\"\n        stroke={color}\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M11.9955 16.7002H12.0045\"\n        stroke={color}\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M8.29431 13.7002H8.30329\"\n        stroke={color}\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M8.29431 16.7002H8.30329\"\n        stroke={color}\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default CalenderIcon\n","import * as React from \"react\"\n\nimport {\n  Box,\n  Breakpoint,\n  Container,\n  IconButton,\n  Stack,\n  Typography,\n  alpha,\n  Avatar,\n  Badge\n} from \"@mui/material\"\n\nimport CloseOutlinedIcon from \"@mui/icons-material/CloseOutlined\"\nimport IconButtonWithPopover from \"@/components/reusables/icon-button-with-popover\"\nimport CalenderIcon from \"@/components/icons/calender-icon\"\n\ninterface IPageHeadingProps {\n  metaData?: React.ReactElement\n  container?: Breakpoint\n  role?: string\n}\n\nconst PageHeading: React.FunctionComponent<IPageHeadingProps> = ({\n  metaData,\n  container = \"xl\",\n  role = \"employer\"\n}) => {\n  return (\n    <Box sx={{ bgcolor: (t) => alpha(t.palette.secondary.dark, 0.5) }}>\n      <Container maxWidth={container} sx={{ px: [3, , 0] }}>\n        <Stack\n          direction=\"row\"\n          justifyContent={\"space-between\"}\n          alignItems=\"center\"\n          px={4}\n          py={1}\n        >\n          {Boolean(metaData) && <Box>{metaData}</Box>}\n          <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n            <IconButtonWithPopover\n              sx={{ \"& .MuiIconButton-root\": { p: 0 } }}\n              hasBadge={true}\n              label={<CalenderIcon />}\n            />\n            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n              <Avatar />\n              <Stack\n                sx={{\n                  [\"& p\"]: {\n                    fontSize: \"14px\",\n                    display: \"flex\"\n                  }\n                }}\n              >\n                <Typography textTransform={\"capitalize\"}>userName</Typography>\n                <Box\n                  sx={{\n                    bgcolor: (t) => t.palette.primary.main,\n                    borderRadius: 2,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    px: 0.4\n                  }}\n                >\n                  <Typography>{role}</Typography>\n                </Box>\n              </Stack>\n            </Stack>\n          </Stack>\n        </Stack>\n      </Container>\n    </Box>\n  )\n}\n\nexport default PageHeading\n","import * as React from \"react\"\n\nexport interface IconType {\n  color?: string\n}\n\ninterface ICopyIconProps extends IconType {\n  width?: string\n  height?: string\n}\n\nconst CopyIcon: React.FunctionComponent<ICopyIconProps> = ({\n  color = \"#8F8DE0\",\n  width = 24,\n  height = 24\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M16 12.9V17.1C16 20.6 14.6 22 11.1 22H6.9C3.4 22 2 20.6 2 17.1V12.9C2 9.4 3.4 8 6.9 8H11.1C14.6 8 16 9.4 16 12.9Z\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M22 6.9V11.1C22 14.6 20.6 16 17.1 16H16V12.9C16 9.4 14.6 8 11.1 8H8V6.9C8 3.4 9.4 2 12.9 2H17.1C20.6 2 22 3.4 22 6.9Z\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default CopyIcon\n","import * as React from \"react\"\n\nexport interface IconType {\n  color?: string\n}\n\ninterface IGridIconProps extends IconType {\n  width?: string\n  height?: string\n}\n\nconst GridIcon: React.FunctionComponent<IGridIconProps> = ({\n  color = \"#FEFEFE\",\n  width = 24,\n  height = 24\n}) => {\n  return (\n    <svg\n      width={width}\n      height={height}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M9 22H15C20 22 22 20 22 15V9C22 4 20 2 15 2H9C4 2 2 4 2 9V15C2 20 4 22 9 22Z\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M12 2V22\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n      <path\n        d=\"M2 12H22\"\n        stroke={color}\n        stroke-width=\"1.5\"\n        stroke-linecap=\"round\"\n        stroke-linejoin=\"round\"\n      />\n    </svg>\n  )\n}\n\nexport default GridIcon\n","import CopyIcon from \"@/components/icons/copy-icon\";\nimport GridIcon from \"@/components/icons/grid-icon\";\nimport LinkIcon from \"@/components/icons/link-icon\";\nimport PageBreadcrumb from \"@/components/reusables/page-breadcrumb/page-breadcrumb\";\nimport TitleValueViewer from \"@/components/reusables/title-value-viewer\";\nimport { ASSETS_PATH } from \"@/consistants\";\nimport PageWrapper from \"@/containers/page-wrapper\";\nimport {\n  Box,\n  Grid,\n  Grow,\n  IconButton,\n  Paper,\n  Stack,\n  Typography,\n} from \"@mui/material\";\nimport * as React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useParams } from \"react-router-dom\";\n\ninterface IClaimDetailsProps {}\n\nconst ClaimDetails: React.FunctionComponent<IClaimDetailsProps> = (props) => {\n  const { t } = useTranslation([\"common\", \"sections\"]);\n  const { id } = useParams();\n  return (\n    <PageWrapper metaData={<PageBreadcrumb pathId={id ? +id : null} />}>\n      <Paper sx={{ my: 4, p: 3 }}>\n        <Grid container spacing={5}>\n          <Grid item xs={12} md={6}>\n            <Stack spacing={1}>\n              <Typography variant={\"headingMedium\"}>\n                {t(\"common:nickname\")}\n              </Typography>\n              <Typography variant=\"bodyMedium\">\n                {t(\"sections:lorem_ipsum\")}\n              </Typography>\n              <Stack\n                maxWidth={\"100%\"}\n                spacing={2}\n                sx={{\n                  my: \"30px !important\",\n                  width: 500,\n                  maxWidth: \"100%\",\n                  \"& > div\": {\n                    bgcolor: (t) => t.palette.heading.main,\n                    borderRadius: 2,\n                    p: 2,\n                    justifyContent: \"space-between\",\n                    color: (t) => t.palette.common.white,\n                  },\n                  \"& >:last-child\": {\n                    py: 1,\n                  },\n                }}\n              >\n                <TitleValueViewer\n                  title={t(\"common:unique_code\")}\n                  value={<Typography>4556#7879</Typography>}\n                />\n                <TitleValueViewer\n                  title={t(\"common:unit\")}\n                  icon={<GridIcon />}\n                  value={\n                    <Stack direction=\"row\" alignItems={\"center\"} spacing={1}>\n                      <Typography>8 unit</Typography>\n                      <Typography color={\"text.secondary\"}>from 10</Typography>\n                    </Stack>\n                  }\n                />\n                <TitleValueViewer\n                  icon={<LinkIcon />}\n                  title={t(\"common:link\")}\n                  value={\n                    <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n                      <Typography>www.instagram/story/nianaaa</Typography>\n                      <IconButton>\n                        <CopyIcon />\n                      </IconButton>\n                    </Stack>\n                  }\n                />\n              </Stack>\n            </Stack>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Stack\n              height={\"100%\"}\n              px={3}\n              borderLeft={(t) => [\n                \"0px\",\n                ,\n                `1px solid ${t.palette.primary.main}`,\n              ]}\n            >\n              <Stack spacing={2}>\n                <Stack direction=\"row\" spacing={1}>\n                  <LinkIcon />\n                  <Typography textTransform=\"capitalize\">\n                    {t(\"common:attachment\")}\n                  </Typography>\n                </Stack>\n                <Stack direction=\"row\" flexWrap=\"wrap\">\n                  {[1, 2, 3, 4, 5].map((item, index) => {\n                    return (\n                      <Box\n                        key={item}\n                        sx={{\n                          mt: 1,\n                          mr: 1,\n                          width: 90,\n                          maxWidth: \"100%\",\n                          height: 90,\n                          \"& img\": {\n                            width: \"100%\",\n                            height: \"100%\",\n                            borderRadius: 2,\n                          },\n                        }}\n                      >\n                        <img src={`${ASSETS_PATH}/images/LightGrayBox.jpg`} />\n                      </Box>\n                    );\n                  })}\n                </Stack>\n              </Stack>\n            </Stack>\n          </Grid>\n        </Grid>\n      </Paper>\n    </PageWrapper>\n  );\n};\n\nexport default ClaimDetails;\n"],"names":["color","width","height","viewBox","fill","xmlns","d","stroke","hasTitle","t","useTranslation","sx","direction","alignItems","justifyContent","spacing","component","fontSize","items","pathId","lastIndex","length","Stack","py","map","index","path","title","lastOne","to","Link","variant","underline","marginRight","Typography","textTransform","palette","text","secondary","primary","main","bgcolor","borderRadius","px","Box","position","display","top","useTheme","location","useLocation","paths","getPaths","pathname","value","icon","p","ASSETS_PATH","props","metaData","children","hasContainer","container","loading","renderChildren","maxWidth","label","buttonId","buttonColor","hasBadge","React","anchorEl","setAnchorEl","handleClick","event","currentTarget","open","Boolean","id","undefined","Badge","invisible","anchorOrigin","vertical","horizontal","IconButton","onClick","Popover","onClose","transformOrigin","role","alpha","dark","Container","Avatar","useParams","Paper","my","Grid","item","xs","md","heading","common","white","borderLeft","flexWrap","mt","mr","src"],"sourceRoot":""}